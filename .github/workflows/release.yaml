name: release

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  TAG: ${{ github.ref_name }}
  REGISTRY: ghcr.io
  USERNAME: ${{ github.actor }}
  PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  ORG: rancher-sandbox
  PROD_REGISTRY: ${{ secrets.REGISTRY_ENDPOINT }}
  PROD_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  PROD_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  PROD_ORG: rancher-sandbox
  CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  RELEASE_DIR: .cr-release-packages
  REPO: ${{ github.repository }}

permissions:
  contents: write # Allow to create a release.

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: setupGo
      uses: actions/setup-go@v4
      with:
        go-version: '=1.20.7'
    - name: Docker login
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.USERNAME }}
        password: ${{ env.PASSWORD }}
    - name: Build docker image
      run: make docker-build-all TAG=${{ env.TAG }} REGISTRY=${{ env.REGISTRY }}
    - name: Push docker image to gh registry
      run: make docker-push-all TAG=${{ env.TAG }} REGISTRY=${{ env.REGISTRY }}

    - name: Prepare environment for prod registry
      run: |
        echo "PROD_REGISTRY=${PROD_REGISTRY/https:\/\//}" >> $GITHUB_ENV

    - name: Docker login to prod registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.PROD_REGISTRY }}
        username: ${{ env.PROD_USERNAME }}
        password: ${{ env.PROD_PASSWORD }}
    - name: Build prod docker image
      run: make docker-build-all TAG=${{ env.TAG }} REGISTRY=${{ env.PROD_REGISTRY }} ORG=${{ env.PROD_ORG }}
    - name: Push docker image to prod registry
      run: make docker-push-all TAG=${{ env.TAG }} REGISTRY=${{ env.PROD_REGISTRY }} ORG=${{ env.PROD_ORG }}
  release:
    name: Create helm release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Prepare environment for prod registry
        run: |
          echo "PROD_REGISTRY=${PROD_REGISTRY/https:\/\//}" >> $GITHUB_ENV

      - name: Package operator chart
        run: RELEASE_TAG=${GITHUB_REF##*/} CHART_PACKAGE_DIR=${RELEASE_DIR} REGISTRY=${{ env.PROD_REGISTRY }} ORG=${{ env.PROD_ORG }} make release

      - name: Install chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          install_only: true

      - name: Prepare environment for the chart releaser
        run: |
          echo "CR_OWNER=$(cut -d '/' -f 1 <<< $GITHUB_REPOSITORY)" >> $GITHUB_ENV
          echo "CR_GIT_REPO=$(cut -d '/' -f 2 <<< $GITHUB_REPOSITORY)" >> $GITHUB_ENV
          rm -rf .cr-index
          mkdir -p .cr-index

      - name: Run chart-releaser upload
        run: cr upload --skip-existing -c "$(git rev-parse HEAD)" --generate-release-notes --release-name-template "v${{ env.TAG }}"

      - name: Run chart-releaser index
        run: cr index --push
